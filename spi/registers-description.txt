Note: The serial peripheral interface(SPI), compatible with powerpc mpc83xx serials
+-------------+-------------------------------+--------+-------------+
|  Offset     | Register name                 | Access | Reset value |
+-------------+-------------------------------+--------+-------------|
| 0x000–0x01F | Reserved                      | R/W    | 0000_001Fh  |
+-------------+-------------------------------+--------+-------------+
| 0x020       | SPI mode register    (SPMODE) | R/W    | 0020_0000h  |
+-------------+-------------------------------+--------+-------------+
| 0x024       | SPI event register   (SPIE)   | R/W    | 0000_0000h  |
+-------------+-------------------------------+--------+-------------+
| 0x028       | SPI mask register    (SPIM)   | W      | 0000_0000h  |
+-------------+-------------------------------+--------+-------------+
| 0x02c       | SPI command register (SPCOM)  | W      | 0000_0000h  |
+-------------+-------------------------------+--------+-------------+
| 0x030       | SPI transmit register(SPITD)  | R      | 0000_0000h  |
+-------------+-------------------------------+--------+-------------+
| 0x034       | SPI receive register (SPIRD)  | R/W    | 0010_0000h  |
+-------------+-------------------------------+--------+-------------+
| 0x038–0xFFF | Reserved                      | R/W    | 0010_0000h  |
+-------------+-------------------------------+--------+-------------+

Table 19-4. SPMODE Field Descriptions
+------+------+---------------------------------------------------------------------------+
| Bits | Name | Description                                                               |
+------+------+---------------------------------------------------------------------------+
| 0    | —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+
|      |      | 0 Normal operation.                                                       |
| 0    | LOOP | 1 Loopback mode. Used to test the SPI controller internal functionality,  |
|      |      |   the transmitter output is internally connected to the receiver input.   |
|      |      |   The receiver and transmitter operate normally, except that received data|
|      |      |   is ignored.                                                             |
|      |      | The SPI acts normally in loop back mode; therefore, negating SPISEL in    |
|      |      | slave mode stops transmission,negating it in master mode and causing an   |
|      |      | MME error.                                                                |
+------+------+---------------------------------------------------------------------------+
| 2    | CI   | Clock invert. Inverts SPI clock polarity. See Figure 19-5 and Figure 19-6 |
|      |      |   for more information.                                                   |
|      |      |  0 The inactive state of SPICLK is low.                                   |
|      |      |  1 The inactive state of SPICLK is high.                                  |
+------+------+---------------------------------------------------------------------------+
| 3    | CP   | Clock phase. Selects the transfer format. See Figure 19-5 and Figure 19-6 |
|      |      | for more information.                                                     |
|      |      |   0 SPICLK starts toggling at the middle of the data transfer.            |
|      |      |   1 SPICLK starts toggling at the beginning of the data transfer.         |
+------+------+---------------------------------------------------------------------------+
| 4    | DIV16| Divide by 16. Selects the clock source for the SPI baud rate              |
|      |      | generator (SPI BRG) when configured as an SPI master. In slave mode,      |
|      |      | SPICLK is the clock source.                                               |
|      |      | 0 The SPI block input clock is the input to the SPI BRG.                  |
|      |      | 1 The SPI block input clock/16 is the input to the SPI BRG.               |
|      |      | In slave mode this bit must be cleared.                                   |
+------+------+---------------------------------------------------------------------------+
| 5    | REV  | Reverse data mode for 8-/16-/32-bit character length only                 |
|      |      | (see Section 19.4.1.6.1, “Reverse Mode SPMODE[REV] Examples.”)            |
|      |      | 0 LSB sent/received first (for data LEN < 32 the data is located at       |
|      |      | the lower half-word LSB)                                                  |
|      |      | 1 MSB sent/received first                                                 |
+------+------+---------------------------------------------------------------------------+
| 6    | M/S  | Master/slave. Selects master or slave mode.                               |
|      |      | 0 The SPI is a slave.                                                     |
|      |      | 1 The SPI is a master.                                                    |
+------+------+---------------------------------------------------------------------------+
| 7    | EN   | Enable SPI. Any other bits in SPMODE must not change when EN is set.      |
|      |      | 0 The SPI is disabled. The SPI is in a idle state and consumes minimal    |
|      |      | power. The SPI BRG is not functioning and the input clock is disabled.    |
|      |      | 1 The SPI is enabled.                                                     |
|      |      | Note: The SPI controller requires a minimal gap of at least 10 input      |
|      |      | clocks between disabling the SPI and re-enabling. This minimal gap is     |
|      |      | sufficient provided that SPMODE[PM] and SPMODE[DIV16] are cleared during  |
|      |      | the time in which SPMODE[EN] is cleared.                                  |
+------+------+---------------------------------------------------------------------------+
| 8-11 | LEN  | Character length in bits per character. LEN can be either 32-bits, or     |
|      |      | 4- to 16-bits that are shown as follows:                                  |
|      |      | 0000 32-bit characters                                                    |
|      |      | 0001–0010 Reserved, causes erratic behavior.                              |
|      |      | 0011 4-bit characters                                                     |
|      |      | …                                                                         |
|      |      | 1111 16-bit characters                                                    |
|      |      | The TX and RX registers (SPITD, SPIRD) hold 32 bits at a time. A character|
|      |      | length of 32 bits fills the TX and RX registers; therefore, all of the    |
|      |      | bits in these registers are valid. However, if the character length       |
|      |      | selected by LEN is equal or less than 16 bits, then the valid bits will   |
|      |      | reside in the lower half-word of the transmit and receive registers.      |
|      |      | For example, if the character length is set to 16 bits than the valid bits|
|      |      | will be 16–31, if the character length is set to 5 bits that the valid    |
|      |      | bits will be16–20. Note that the transmit and receive registers           |
|      |      | each can hold only one character regardless of the character length.      |
+------+------+---------------------------------------------------------------------------+
| 12-15| PM   | Prescale modulus select. Specifies the divide ratio of the prescale       |
|      |      | divider in the SPI clock generator. The SPI baud rate generator clock     |
|      |      | source (either input clock or input clock divided by 16, depending on     |
|      |      | DIV16 bit) is divided by 4 × ([PM] + 1), a range from 4 to 64. The clock  |
|      |      | has a 50% duty cycle. For example, if the prescale modulus is set to      |
|      |      | PM = 0011 and DIV16 is set, the system/SPICLK clock ratio will be         |
|      |      | 16 × (4 × (0011 + 1)) = 256.  In slave mode this field must be cleared.   |
+------+------+---------------------------------------------------------------------------+
| 16–18| —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+
| 19   | OD   | Open drain mode.                                                          |
|      |      | 0 All output pins are configured to normal mode.                          |
|      |      | 1 All output pins are configured to open drain mode.                      |
+------+------+---------------------------------------------------------------------------+
| 20–31| —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+

SPIE Field ts Name Description
+------+------+---------------------------------------------------------------------------+
| Bits | Name | Description                                                               |
+------+------+---------------------------------------------------------------------------+
| 0–16 | —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+
| 17   | LT   | Last character was transmitted.                                           |
|      |      | The last character of the frame was completely transferred. This bit is   |
|      |      | set only if the transmitted character was the last character of the frame |
|      |      | (if SPCOM[LST] is set). New data can be written to SPITD is indicated by  |
|      |      | bit NF.                                                                   |
+------+------+---------------------------------------------------------------------------+
| 18   | DNR  | Note: Data not ready. In slave mode only when SPISEL is asserted before   |
|      |      | data is ready in the SPI, IDLE is sent on the line and UN bit is also     |
|      |      | asserted the SPI should be disable to restart its operation.              |
+------+------+---------------------------------------------------------------------------+
| 19   | OV   | Slave/master overrun.                                                     |
|      |      | Indicates whether an overrun has occurred during reception.               |
|      |      | In case of overrun the SPI continues transmission/reception process while |
|      |      | reporting overrun for the missing characters.                             |
+------+------+---------------------------------------------------------------------------+
| 20   | UN   | Slave underrun. Indicates whether the SPI transmitter did not have data   |
|      |      | to transmit on time, and therefore,                                       |
|      |      | whether IDLE was sent on the line. Valid only in slave mode               |
|      |      | (SPMODE[M/S]) = 0. In master mode (SPMODE[M/S]) = 1) if the SPI’s         |
|      |      | transmitter has no valid data to transmit the SPICLK stop toggling and    |
|      |      | transmission/reception is frozen (no underrun is reported), when data is  |
|      |      | written to the SPITD the transmission resumes.                            |
+------+------+---------------------------------------------------------------------------+
| 21   | MME  | Multiple-master error. Set when SPISEL is asserted externally while the   |
|      |      | SPI is in master mode. Note that the MME error can occur in loopback mode.|
+------+------+---------------------------------------------------------------------------+
| 22   | NE   | Not empty. When set Indicates that SPIRD contains a received character.   |
|      |      | 0 The receiver is empty                                                   |
|      |      | 1 The receiver has valid received data and indications about LST          |
|      |      | (command register) and OV (SPIE).The core is free to read the content of  |
|      |      | the receiver. Reading the receiver SPIRD clears NE if no more data is     |
|      |      | available.                                                                |
+------+------+---------------------------------------------------------------------------+
| 23   | NF   | Not full. Indicates whether SPITD is not in use and a new character can   |
|      |      | be written to it by the core.                                             |
|      |      | 0 The transmitter is full.                                                |
|      |      | 1 The transmitter is not full. The core is free to write to the           |
|      |      | transmitter.  NF must be clear to enable the transmission of another      |
|      |      | character (writing to the transmitter clears NF)                          |
+------+------+---------------------------------------------------------------------------+
| 24–31| —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+

SPIM Field Descriptions
+------+------+---------------------------------------------------------------------------+
| Bits | Name | Description                                                               |
+------+------+---------------------------------------------------------------------------+
| 0–16 | —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+
| 17   | LT   | Last character transmitted                                                |
+------+------+---------------------------------------------------------------------------+
|      |      | 0 LT event will not cause an SPI interrupt                                |
|      |      | 1 LT event causes an SPI interrupt                                        |
+-------------+---------------------------------------------------------------------------+
| 18   | DNR  | In slave mode data not ready                                              |
|      |      | 0 Slave DNR event will not cause an SPI interrupt                         |
|      |      | Note: 1Slave DNR event causes an SPI interrupt                            |
+------+------+---------------------------------------------------------------------------+
| 19   | OV   | Slave/Master Overrun interrupt mask                                       |
|      |      | 0 Slave/Master Overrun event will not cause an SPI interrupt              |
|      |      | 1 Slave/Master Overrun event causes an SPI interrupt                      |
+------+------+---------------------------------------------------------------------------+
| 20   | UN   | Slave Underrun interrupt mask                                             |
|      |      | 0 Slave Underrun event will not cause an SPI interrupt                    |
|      |      | 1 Slave Underrun event causes an SPI interrupt                            |
+------+------+---------------------------------------------------------------------------+
| 21   | MME  | Multimaster error interrupt mask                                          |
|      |      | 0 Multimaster error event will not cause an SPI interrupt                 |
|      |      | 1 Multimaster error event causes an SPI interrupt                         |
+------+------+---------------------------------------------------------------------------+
| 22   | NE   | Not Empty interrupt mask                                                  |
|      |      | 0 Not Empty event will not cause an SPI interrupt                         |
|      |      | 1 Not Empty event causes an SPI interrupt                                 |
+------+----------------------------------------------------------------------------------+
| 23   | NF   | Not Full interrupt mask                                                   |
|      |      | 0 Not Full event will not cause an SPI interrupt                          |
|      |      | 1 Not Full event causes an SPI interrupt                                  |
+------+----------------------------------------------------------------------------------+
| 24–31| —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+

SPCOM Field Descriptions
+------+------+---------------------------------------------------------------------------+
| Bits | Name | Description                                                               |
+------+------+---------------------------------------------------------------------------+
| 0–8  | —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+
| 9    | LST  | This bit represents the last character. Should be set before the last     |
|      |      | character is written to the SPITD. This results in SPIE[LT] being set     |
|      |      | when the character is fully transmitted and by that gives indication      |
|      |      | about the frame being fully transmitted.                                  |
|      |      | 0 This character is not the last character of the frame                   |
|      |      | 1 This character is the last character of the frame                       |
+------+------+---------------------------------------------------------------------------+
| 10–31| —    | Reserved                                                                  |
+------+------+---------------------------------------------------------------------------+
                   ___       ___       ___       ___       ___       ___       ___       ___
          CI = 0  /   \     /   \     /   \     /   \     /   \     /   \     /   \     /   \
SPICLK  _________/     \___/     \___/     \___/     \___/     \___/     \___/     \___/     \_____
        _________       ___       ___       ___       ___       ___       ___       ___       _____
SPICLK    CI = 1 \     /   \     /   \     /   \     /   \     /   \     /   \     /   \     /
                  \___/     \___/     \___/     \___/     \__ /     \___/     \___/     \___/
        ______  _______  ________  ________  ________  ________  ________  ________  ________  ____
SPIMOSI       \/       \/        \/        \/        \/        \/        \/        \/        \/
               \_______/\________/\________/\________/\________/\________/\________/\________/
              _______  ________  ________  ________  ________  ________  ________  ________
SPIMISO _____/       \/        \/        \/        \/        \/        \/        \/        \_______
             \_______/\________/\________/\________/\________/\________/\________/\________/
SPISEL  __                                                                                       __
          \                                                                                     /
           \___________________________________________________________________________________/

                       SPI Transfer Format with SPMODE[CP] = 0

                 ___       ___       ___       ___       ___       ___       ___       ___
        CI = 0  /   \     /   \     /   \     /   \     /   \     /   \     /   \     /   \
SPICLK ________/     \___/     \___/     \___/     \___/     \___/     \___/     \___/     \_____
       ________       ___       ___       ___       ___       ___       ___       ___       _____
SPICLK  CI = 1 \     /   \     /   \     /   \     /   \     /   \     /   \     /   \     /
                \___/     \___/     \___/     \___/     \__ /     \___/     \___/     \___/
       ________  _______  ________  ________  ________  ________  ________  ________  ________  ___
SPIMOSI        \/       \/        \/        \/        \/        \/        \/        \/        \/
                \_______/\________/\________/\________/\________/\________/\________/\________/
           ____  _______  ________  ________  ________  ________  ________  ________  ________
SPIMISO___/ Q  \/       \/        \/        \/        \/        \/        \/        \/        \____
          \____/\_______/\________/\________/\________/\________/\________/\________/\________/
SPISEL ___                                                                                       __
          \                                                                                     /
           \___________________________________________________________________________________/
                       SPI Transfer Format with SPMODE[CP] = 1

